apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: securenginx-statefulset
  namespace: nginx-namespace
  labels:
    app: nginx
spec:
  serviceName: "headless-svc"
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      securityContext:
        runAsUser: 1003
        runAsGroup: 1003
        fsGroup: 2007
        runAsNonRoot: true
      containers:
        - name: nginx
          image: secure-nginx:1.19-apline
          ports:
            - containerPort: 443
          volumeMounts:
            - name: nginx-storage
              mountPath: /usr/share/nginx/html
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "200m"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true
          livenessProbe:
            httpGet:
              path: /
              port: 443
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 443
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 3
            failureThreshold: 3
            
      imagePullSecrets:
        - name: github-container-registry
          

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-storage
  namespace: nginx-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi

---
apiVersion: v1
kind: Service
metadata:
  name: headless-svc
  namespace: nginx-namespace
spec:
  clusterIP: None
  selector:
    app: nginx
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: nginx-namespace
spec:
  selector:
    app: nginx
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
  type: LoadBalancer
