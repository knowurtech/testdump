name: Secure Nginx cicd

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REGISTRY: "ghcr.io"
      IMAGE_NAME: ${{ github.repository }}
    outputs:
      image_tag: ${{ steps.set_output.outputs.image_tag }}    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Github Container Registry
        uses: docker/login-action@3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GCRTOKEN }}


      - name: Build Docker image
        run: docker build -t "${{ env.REGISTRY }}/secure-nginx:1.19-${{ github.sha }}" QA-01/. || exit 1


      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@0.26.0
        with:
          image-ref: "${{ env.REGISTRY }}/secure-nginx:1.19-${{ github.sha }}"
          format: table
          exit-code: 1
          severity: HIGH,CRITICAL

      - name: Push to GCR
        run: docker push "${{ env.REGISTRY }}/secure-nginx:1.19-${{ github.sha }}" || exit 1


  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      REGISTRY: "ghcr.io"    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Git config
        run: |
          git config user.name "knowurtech"
          git config user.email "shifahim@gmail.com"


      - name: Update Kubernetes deployment file
        run: |
          NEW_IMAGE="${{ env.REGISTRY }}/secure-nginx:1.19-${{ github.sha }}"          
          sed -i "s|image: .*|image: ${NEW_IMAGE}|g" QA-02/nginx_stateful.yaml
          echo "Updated deployment to use image: ${NEW_IMAGE}"

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3

      - name: Load Kubernetes config
        run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f QA-02/nginx_stateful.yaml || exit 1
          kubectl rollout status statefulset/securenginx-statefulset || exit 1


      - name: Commit and push changes
        run: |
          git add QA-02/nginx_stateful.yaml
          git commit -m "Updated deployment with new image name: ${{ env.REGISTRY }}/secure-nginx:1.19-${{ github.sha }}" || echo "No changes to commit"
          git push


  status_check:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify on Success
        if: success()
        run: |
          echo "Sending out notification for successful deployment using email or slack"

      - name: Notify on Failure
        if: failure()
        run: |
          echo "Sending out notification for Failed deployment using email or slack"
